{"ast":null,"code":"var _jsxFileName = \"X:\\\\Code Projects\\\\RocketNotes\\\\src\\\\App.js\";\nimport React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport NewNoteForm from './NewNoteForm.js';\nimport Note from './Note.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notes: []\n    };\n    this.addNote = this.addNote.bind(this);\n    this.getNotes = this.getNotes.bind(this);\n    this.writeNotes = this.writeNotes.bind(this);\n  }\n  addNote(newNote) {\n    let notes = this.state.notes.slice();\n    notes.push(newNote);\n    this.setState({\n      notes: notes\n    });\n  }\n  getNotes() {\n    const fs = require('fs');\n    let fileContents = fs.readFileSync('notesList.txt', 'utf-8');\n    let fileArray = fileContents.split(\"\\n\\n\");\n    let formattedArray = [];\n    for (const i in formattedArray) {\n      let noteArray = fileArray[i].split(\"\\n\");\n      for (const x in noteArray) {\n        let obj = {\n          noteTitle: noteArray[0],\n          noteDescription: noteArray[1],\n          date: noteArray[2]\n        };\n        formattedArray.push(obj);\n      }\n    }\n    this.setState({\n      notes: formattedArray\n    });\n  }\n  writeNotes() {}\n  render() {\n    useEffect(() => {\n      this.getNotes();\n    }, []);\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container is-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"columns\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column is-half is-offset-one-quarter\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"title\",\n              style: {\n                color: \"white\"\n              },\n              children: \"Rocket League Notes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(NewNoteForm, {\n              addNote: this.addNote\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"my-2\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                style: {\n                  listStyle: \"disc outside\",\n                  paddingLeft: \"20px\"\n                },\n                children: this.state.notes.map((note, index) => /*#__PURE__*/_jsxDEV(Note, {\n                  note: note\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 11\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","logo","NewNoteForm","Note","jsxDEV","_jsxDEV","App","Component","constructor","props","state","notes","addNote","bind","getNotes","writeNotes","newNote","slice","push","setState","fs","require","fileContents","readFileSync","fileArray","split","formattedArray","i","noteArray","x","obj","noteTitle","noteDescription","date","render","useEffect","className","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","listStyle","paddingLeft","map","note","index"],"sources":["X:/Code Projects/RocketNotes/src/App.js"],"sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport NewNoteForm from './NewNoteForm.js';\nimport Note from './Note.js';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tnotes: []\n\t\t}\n\n\t\tthis.addNote = this.addNote.bind(this);\n\t\tthis.getNotes = this.getNotes.bind(this);\n\t\tthis.writeNotes = this.writeNotes.bind(this);\n\t}\n\n\taddNote(newNote) {\n\t\tlet notes = this.state.notes.slice();\n\t\tnotes.push(newNote);\n\n\t\tthis.setState({\n\t\t\tnotes: notes\n\t\t})\n\t}\n\n\tgetNotes() {\n\t\tconst fs = require('fs');\n\t\tlet fileContents = fs.readFileSync('notesList.txt', 'utf-8');\n\t\tlet fileArray = fileContents.split(\"\\n\\n\");\n\n\t\tlet formattedArray = [];\n\t\tfor (const i in formattedArray) {\n\t\t\tlet noteArray = fileArray[i].split(\"\\n\");\n\t\t\tfor (const x in noteArray) {\n\t\t\t\tlet obj = {\n\t\t\t\t\tnoteTitle: noteArray[0],\n\t\t\t\t\tnoteDescription: noteArray[1],\n\t\t\t\t\tdate: noteArray[2]\n\t\t\t\t}\n\t\t\t\tformattedArray.push(obj);\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({\n\t\t\tnotes: formattedArray\n\t\t})\n\t}\n\n\twriteNotes() {\n\n\t}\n\n\trender() {\n\t\tuseEffect(() => {\n\t\t\tthis.getNotes();\n\t\t}, [])\n\n\t\treturn (\n\t\t\t<section className=\"section\">\n\t\t\t\t<div className=\"container is-fluid\">\n\t\t\t\t\t<div className=\"columns\">\n\t\t\t\t\t\t<div className=\"column is-half is-offset-one-quarter\">\n\n\t\t\t\t\t\t\t<h1 className=\"title\" style={{ color: \"white\" }}>Rocket League Notes</h1>\n\n\t\t\t\t\t\t\t<NewNoteForm addNote={this.addNote} />\n\n\t\t\t\t\t\t\t<div className=\"my-2\">\n\t\t\t\t\t\t\t\t<ul style={{ listStyle: \"disc outside\", paddingLeft: \"20px\"}}>\n\t\t\t\t\t\t\t\t\t{this.state.notes.map((note, index) => (\n\t\t\t\t\t\t\t\t\t\t<Note note={note} />\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t);\n\t}\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,OAAOC,IAAI,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,GAAG,SAASN,KAAK,CAACO,SAAS,CAAC;EACjCC,WAAWA,CAACC,KAAK,EAAE;IAClB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACZC,KAAK,EAAE;IACR,CAAC;IAED,IAAI,CAACC,OAAO,GAAG,IAAI,CAACA,OAAO,CAACC,IAAI,CAAC,IAAI,CAAC;IACtC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACD,IAAI,CAAC,IAAI,CAAC;IACxC,IAAI,CAACE,UAAU,GAAG,IAAI,CAACA,UAAU,CAACF,IAAI,CAAC,IAAI,CAAC;EAC7C;EAEAD,OAAOA,CAACI,OAAO,EAAE;IAChB,IAAIL,KAAK,GAAG,IAAI,CAACD,KAAK,CAACC,KAAK,CAACM,KAAK,EAAE;IACpCN,KAAK,CAACO,IAAI,CAACF,OAAO,CAAC;IAEnB,IAAI,CAACG,QAAQ,CAAC;MACbR,KAAK,EAAEA;IACR,CAAC,CAAC;EACH;EAEAG,QAAQA,CAAA,EAAG;IACV,MAAMM,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;IACxB,IAAIC,YAAY,GAAGF,EAAE,CAACG,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC;IAC5D,IAAIC,SAAS,GAAGF,YAAY,CAACG,KAAK,CAAC,MAAM,CAAC;IAE1C,IAAIC,cAAc,GAAG,EAAE;IACvB,KAAK,MAAMC,CAAC,IAAID,cAAc,EAAE;MAC/B,IAAIE,SAAS,GAAGJ,SAAS,CAACG,CAAC,CAAC,CAACF,KAAK,CAAC,IAAI,CAAC;MACxC,KAAK,MAAMI,CAAC,IAAID,SAAS,EAAE;QAC1B,IAAIE,GAAG,GAAG;UACTC,SAAS,EAAEH,SAAS,CAAC,CAAC,CAAC;UACvBI,eAAe,EAAEJ,SAAS,CAAC,CAAC,CAAC;UAC7BK,IAAI,EAAEL,SAAS,CAAC,CAAC;QAClB,CAAC;QACDF,cAAc,CAACR,IAAI,CAACY,GAAG,CAAC;MACzB;IACD;IAEA,IAAI,CAACX,QAAQ,CAAC;MACbR,KAAK,EAAEe;IACR,CAAC,CAAC;EACH;EAEAX,UAAUA,CAAA,EAAG,CAEb;EAEAmB,MAAMA,CAAA,EAAG;IACRC,SAAS,CAAC,MAAM;MACf,IAAI,CAACrB,QAAQ,EAAE;IAChB,CAAC,EAAE,EAAE,CAAC;IAEN,oBACCT,OAAA;MAAS+B,SAAS,EAAC,SAAS;MAAAC,QAAA,eAC3BhC,OAAA;QAAK+B,SAAS,EAAC,oBAAoB;QAAAC,QAAA,eAClChC,OAAA;UAAK+B,SAAS,EAAC,SAAS;UAAAC,QAAA,eACvBhC,OAAA;YAAK+B,SAAS,EAAC,sCAAsC;YAAAC,QAAA,gBAEpDhC,OAAA;cAAI+B,SAAS,EAAC,OAAO;cAACE,KAAK,EAAE;gBAAEC,KAAK,EAAE;cAAQ,CAAE;cAAAF,QAAA,EAAC;YAAmB;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAK,eAEzEtC,OAAA,CAACH,WAAW;cAACU,OAAO,EAAE,IAAI,CAACA;YAAQ;cAAA4B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAG,eAEtCtC,OAAA;cAAK+B,SAAS,EAAC,MAAM;cAAAC,QAAA,eACpBhC,OAAA;gBAAIiC,KAAK,EAAE;kBAAEM,SAAS,EAAE,cAAc;kBAAEC,WAAW,EAAE;gBAAM,CAAE;gBAAAR,QAAA,EAC3D,IAAI,CAAC3B,KAAK,CAACC,KAAK,CAACmC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACjC3C,OAAA,CAACF,IAAI;kBAAC4C,IAAI,EAAEA;gBAAK;kBAAAP,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QACjB;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YACE;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACA;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAED;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACD;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACG;EAEZ;AACD;AAEA,eAAerC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}